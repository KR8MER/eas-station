# EAS Station - Emergency Alert System environment configuration
# Copy this file to `.env` and update the placeholders before running the stack.

# =============================================================================
# CORE APPLICATION SETTINGS
# =============================================================================

# Flask secret key for session security (REQUIRED - generate with: python3 -c 'import secrets; print(secrets.token_hex(32))')
SECRET_KEY=replace-with-a-long-random-string

# Application version
APP_BUILD_VERSION=2.3.11

# User agent string for API requests
NOAA_USER_AGENT=KR8MER Emergency Alert Hub/2.1 (+https://github.com/KR8MER/eas-station; NOAA+IPAWS)

# Flask debug mode (set to 'true' only for development, never in production)
FLASK_DEBUG=false

# Flask application entry point (usually no need to change)
FLASK_APP=app.py
FLASK_RUN_HOST=0.0.0.0
FLASK_RUN_PORT=5000
FLASK_ENV=production

# =============================================================================
# DATABASE CONNECTION (PostgreSQL + PostGIS)
# =============================================================================

# Primary database credentials (REQUIRED)
# When running the app stack via Docker Compose, the default host points back to
# your workstation (host.docker.internal). Override to `alerts-db` (also aliased
# as `postgres`) if you enable the embedded database service profile.
POSTGRES_HOST=host.docker.internal
POSTGRES_PORT=5432
POSTGRES_DB=alerts
POSTGRES_USER=postgres
POSTGRES_PASSWORD=change-me

# Optional: DATABASE_URL overrides the individual POSTGRES_* values above
# Leave blank to auto-construct from POSTGRES_* variables
# DATABASE_URL=postgresql+psycopg2://postgres:password@postgres:5432/alerts

# =============================================================================
# CAP ALERT POLLER CONFIGURATION
# =============================================================================

# Polling interval in seconds (default: 180 = 3 minutes)
POLL_INTERVAL_SEC=180

# Request timeout for CAP feeds (default: 30 seconds)
CAP_TIMEOUT=30

# Mode for cap_poller.py: NOAA or IPAWS (set per-service in docker-compose.yml)
# CAP_POLLER_MODE=NOAA

# Optional: Override CAP endpoints (comma-separated URLs)
# Used by both NOAA and IPAWS pollers if set
CAP_ENDPOINTS=

# IPAWS-specific feed URLs (comma-separated)
# Leave empty to use auto-fallback with dynamic timestamp (recommended)
IPAWS_CAP_FEED_URLS=

# IPAWS fallback configuration
IPAWS_DEFAULT_LOOKBACK_HOURS=12
# IPAWS_DEFAULT_START=2024-02-15T12:00:00Z
# IPAWS_DEFAULT_ENDPOINT_TEMPLATE=https://tdl.apps.fema.gov/IPAWSOPEN_EAS_SERVICE/rest/public/recent/{timestamp}

# =============================================================================
# LOGGING CONFIGURATION
# =============================================================================

# Log level: DEBUG, INFO, WARNING, ERROR (default: INFO)
LOG_LEVEL=INFO

# Log file location (relative to app root)
LOG_FILE=logs/eas_station.log

# =============================================================================
# LOCATION DEFAULTS FOR ADMIN UI
# =============================================================================

# These are displayed as defaults in the location settings page
DEFAULT_TIMEZONE=America/New_York
DEFAULT_COUNTY_NAME=Putnam County
DEFAULT_STATE_CODE=OH
DEFAULT_ZONE_CODES=OHZ016,OHC137
DEFAULT_AREA_TERMS=PUTNAM COUNTY,PUTNAM CO,OTTAWA,LEIPSIC,PANDORA,GLANDORF,KALIDA,FORT JENNINGS,COLUMBUS GROVE,DUPONT,MILLER CITY,OTTOVILLE

# Map center coordinates (lat, lng) and zoom level
DEFAULT_MAP_CENTER_LAT=41.0195
DEFAULT_MAP_CENTER_LNG=-84.1190
DEFAULT_MAP_ZOOM=9

# Default LED display lines (comma-separated, 4 lines for Alpha signs)
DEFAULT_LED_LINES=PUTNAM COUNTY,EMERGENCY MGMT,NO ALERTS,SYSTEM READY

# =============================================================================
# OPTIONAL LED SIGN INTEGRATION (Alpha Protocol)
# =============================================================================

# Leave LED_SIGN_IP blank to disable LED sign output
LED_SIGN_IP=
LED_SIGN_PORT=10001

# =============================================================================
# SAME/EAS BROADCASTER CONFIGURATION
# =============================================================================

# Enable EAS audio generation and relay control (true/false)
EAS_BROADCAST_ENABLED=false

# Output directory for generated EAS messages
EAS_OUTPUT_DIR=static/eas_messages
EAS_OUTPUT_WEB_SUBDIR=eas_messages

# Optional: Override web path for audio files
# EAS_OUTPUT_WEB_PATH=

# EAS originator code (WXR=National Weather Service, EAS=Emergency Alert System, etc.)
EAS_ORIGINATOR=WXR

# Station identification (8 characters max, used in EAS headers)
EAS_STATION_ID=EASNODES

# Optional: Call sign (if different from station ID)
# EAS_CALL_SIGN=EASNODES

# Audio generation settings
EAS_ATTENTION_TONE_SECONDS=8
EAS_SAMPLE_RATE=44100
EAS_AUDIO_PLAYER=aplay

# GPIO relay control for transmitter keying
EAS_GPIO_PIN=
EAS_GPIO_ACTIVE_STATE=HIGH
EAS_GPIO_HOLD_SECONDS=5

# Manual broadcast authorization
# Comma-separated SAME/FIPS codes (use ALL or US/USA for nationwide)
EAS_MANUAL_FIPS_CODES=039137

# SAME event codes authorized for manual forwarding
# TESTS expands to: RWT, RMT, DMO, NPT
# Leave blank to authorize all codes
EAS_MANUAL_EVENT_CODES=TESTS

# RADIO CAPTURE SETTINGS
# Directory inside the container where raw IQ/PCM captures are stored
# RADIO_CAPTURE_DIR=/var/lib/eas-station/radio
# Duration in seconds for automatic SDR captures triggered by SAME bursts
# RADIO_CAPTURE_DURATION=30
# Capture format: iq (complex32) or pcm (float32 interleaved)
# RADIO_CAPTURE_MODE=iq

# =============================================================================
# TEXT-TO-SPEECH (TTS) CONFIGURATION
# =============================================================================

# TTS provider: azure, azure_openai, pyttsx3, or leave blank to disable narration
EAS_TTS_PROVIDER=

# -----------------------------------------------------------------------------
# Option 1: pyttsx3 (offline TTS, no API key needed)
# -----------------------------------------------------------------------------
# PYTTSX3_VOICE=com.apple.speech.synthesis.voice.Alex
# PYTTSX3_RATE=180
# PYTTSX3_VOLUME=0.8

# -----------------------------------------------------------------------------
# Option 2: Azure AI Speech (legacy, lower quality)
# -----------------------------------------------------------------------------
AZURE_SPEECH_KEY=
AZURE_SPEECH_REGION=
# AZURE_SPEECH_VOICE=en-US-AriaNeural
# AZURE_SPEECH_SAMPLE_RATE=24000

# -----------------------------------------------------------------------------
# Option 3: Azure OpenAI TTS (recommended, highest quality)
# -----------------------------------------------------------------------------
AZURE_OPENAI_ENDPOINT=
AZURE_OPENAI_KEY=

# Available voices: alloy, echo, fable, onyx, nova, shimmer
AZURE_OPENAI_VOICE=alloy

# Model: tts-1 (fast) or tts-1-hd (high quality)
AZURE_OPENAI_MODEL=tts-1-hd

# Speed: 0.25 to 4.0 (1.0 is normal)
AZURE_OPENAI_SPEED=1.0

# =============================================================================
# OPTIONAL NOTIFICATION SETTINGS
# =============================================================================

# Enable email/SMS notifications (true/false)
ENABLE_EMAIL_NOTIFICATIONS=false
ENABLE_SMS_NOTIFICATIONS=false

# Email configuration (if enabled)
MAIL_SERVER=
MAIL_PORT=587
MAIL_USE_TLS=true
MAIL_USERNAME=
MAIL_PASSWORD=

# =============================================================================
# PERFORMANCE TUNING
# =============================================================================

# Cache timeout in seconds
CACHE_TIMEOUT=300

# Max worker threads
MAX_WORKERS=2

# Upload folder for boundary files
UPLOAD_FOLDER=/app/uploads

# =============================================================================
# DOCKER/INFRASTRUCTURE METADATA
# =============================================================================

# Timezone for container
TZ=America/New_York

# Watchtower auto-update configuration
WATCHTOWER_LABEL_ENABLE=true
WATCHTOWER_MONITOR_ONLY=false

# Database image for embedded mode
ALERTS_DB_IMAGE=postgis/postgis:17-3.4

# Optional: Database metadata for external monitoring/backup tools
# ALERTS_DB_CONTAINER=alerts-db
# ALERTS_DB_VOLUME=eas_station_alerts-db
# ALERTS_DB_VERSION=17.0
